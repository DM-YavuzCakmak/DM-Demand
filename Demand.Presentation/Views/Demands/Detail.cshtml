@using Demand.Domain.ViewModels
@model DemandViewModel


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="~/css/index.css" rel="stylesheet" />
    <style>
        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        body {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            flex-direction: column;
        }

        #logo {
            max-width: 150px;
            max-height: 150px;
        }

        main {
            margin-top: 20px;
            width: 80%;
            max-width: 800px;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .popup-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .form-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .form-group {
            width: 48%;
            margin-bottom: 10px;
        }

            .form-group label {
                display: block;
                margin-bottom: 5px;
                color: white;
            }

            .form-group select,
            .form-group input[type="text"],
            .form-group textarea {
                width: 100%;
                padding: 8px;
                box-sizing: border-box;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

        #description {
            height: 125px;
            width: 100%;
            resize: none;
        }

        #description {
            height: 125px;
            width: 100%;
            resize: none;
            background-color: lightgray;
            pointer-events: none;
        }

        #requestDate {
            background-color: lightgray;
            pointer-events: none;
        }
    </style>
</head>

<body>
    <div class="popup-header">
        <h2>View Demand Detail</h2>
    </div>
    <form id="siteform" enctype="multipart/form-data">
        <main class="table" id="demandTable">
            <div class="form-row">
                <div class="form-group">
                    <label for="companyName">Company Name:</label>
                    <select id="companyName" name="companyName" disabled>
                        <option value="@Model.CompanyId" selected="selected">@Model.CompanyName</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="location">Location:</label>
                    <select id="location" name="location" disabled>
                        <option value="@Model.CompanyLocationId" selected="selected">@Model.LocationName</option>
                    </select>
                    <input type="hidden" id="locationId" name="locationId" value="@Model.CompanyLocationId" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="requestDate">Request Date:</label>
                    <input type="text" id="requestDate" name="requestDate" value="@Model.CreatedDate.Value.ToShortDateString()" readonly>
                </div>

                <div class="form-group">
                    <label for="department">Department:</label>
                    <select id="department" name="department" disabled>
                        <option value="@Model.DepartmentId" selected="selected">@Model.DepartmentName</option>
                    </select>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" readonly>@Model.Description</textarea>
                </div>
            </div>
            <div class="form-row">
                @if (Model.File1Path != null)
                {
                    var base64 = Convert.ToBase64String(Model.File1Path);
                    var pdfSrc = $"data:application/pdf;base64,{base64}";
                    <a href="@pdfSrc" download="file1.pdf" class="btn btn-primary">File1 İndir</a>
                }
                else
                {
                    <span>File1 bulunmamaktadır</span>
                }
            </div>
            <div class="form-row">
                @if (Model.File2Path != null)
                {
                    var base64 = Convert.ToBase64String(Model.File2Path);
                    var pdfSrc = $"data:application/pdf;base64,{base64}";
                    <a href="@pdfSrc" download="file2.pdf" class="btn btn-primary">File2 İndir</a>
                }
                else
                {
                    <span>File2 bulunmamaktadır</span>
                }
            </div>
            <div class="form-row">
                @if (Model.File3Path != null)
                {
                    var base64 = Convert.ToBase64String(Model.File3Path);
                    var pdfSrc = $"data:application/pdf;base64,{base64}";
                    <a href="@pdfSrc" download="file3.pdf" class="btn btn-primary">File3 İndir</a>
                }
                else
                {
                    <span>File3 bulunmamaktadır</span>
                }
            </div>
            <div class="form-row button-group">
                <button id="declineButton" class="decline-button">Decline</button>
                <button onclick="changeStatus(@Model.DemandId)" type="button" class="approve-button">Approve</button>
            </div>
        </main>
    </form>
    <div id="overlay"></div>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
    <script src="script.js"></script>
</body>

</html>
<style>
    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .create-demand-button {
        background-color: #3498db;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .create-demand-button:hover {
            background-color: #2980b9;
        }

    .edit-button {
        background-color: #ffcc80;
        color: #fff;
        font-weight: bold;
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    }

        .edit-button:hover {
            background-color: #ffbb66;
            color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .view-button {
        background-color: #85a3ff;
        color: #fff;
        font-weight: bold;
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    }

        .view-button:hover {
            background-color: #6b8cf9;
            color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        width: 80%;
        height: 80%;
        border-radius: 15px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 1001;
    }

    .popup-header h2 {
        margin: 0;
        color: white;
    }

    .file-group input[type="file"] {
        display: none;
    }

    .file-group label {
        background-color: #27ae60;
        color: #fff;
        font-weight: bold;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: inline-block;
    }

        .file-group label:hover {
            background-color: #218c53;
        }

    .file-group .file-name {
        margin-top: 10px;
        display: inline-block;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        max-width: 200px;
    }

    .file-group input[type="file"]:focus + label,
    .file-group input[type="file"]:not(:focus) + label {
        background-color: #27ae60;
    }

        .file-group input[type="file"]:focus + label:hover,
        .file-group input[type="file"]:not(:focus) + label:hover {
            background-color: #218c53;
        }

    .file-group input[type="file"] {
        opacity: 0;
        position: absolute;
        z-index: -1;
    }

        .file-group input[type="file"]:focus + label .file-name,
        .file-group input[type="file"]:not(:focus) + label .file-name {
            display: inline-block;
        }

        .file-group input[type="file"]:focus + label:before,
        .file-group input[type="file"]:not(:focus) + label:before {
            content: "Select File";
            display: inline-block;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .form-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }



    .button-group {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }

    .decline-button {
        background-color: #d9534f;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-right: 10px;
    }

    .approve-button {
        background-color: #5cb85c;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .decline-button:hover {
        background-color: #c9302c;
    }

    .approve-button:hover {
        background-color: #4cae4c;
    }

    #description {
        height: 125px;
        width: 500px;
        resize: none;
    }

    #sendButton {
        background-color: #4CAF50;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .form-group {
        width: calc(50% - 10px);
        margin-bottom: 10px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-group select,
        .form-group input[type="text"],
        .form-group textarea {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-group.file-group {
            width: calc(33.3333% - 10px);
        }
</style>

<script>
    $(document).ready(function () {
        $('#companyName').change(function () {
            var selectedCompanyId = $(this).val();
            $.ajax({
                url: 'api/CompanyLocations/GetLocations?companyId=' + selectedCompanyId,
                type: 'GET',
                success: function (data) {
                    $('#location').empty();
                    $.each(data.data, function (index, item) {
                        $('#location').append($('<option>', {
                            value: item.id,
                            text: item.name
                        }));
                    });
                },
                error: function (error) {
                    console.error('Error fetching locations:', error);
                }
            });
        });
    });
    function updateLocationId() {
        var locationId = $('#location').val();
        $('#locationId').val(locationId);
    }
    document.addEventListener('keydown', function (event) {
        if (event.key === 'Escape') {
            closeCreateDemandPopup();
        }
    });
    function updateFileName(inputId) {
        var input = document.getElementById(inputId);
        var label = document.getElementById(inputId + 'Label');
        var fileName = document.getElementById(inputId + 'Name');

        if (input.files.length > 0) {
            fileName.textContent = input.files[0].name;
        } else {
            fileName.textContent = "";
        }
    }
    function openCreateDemandPopup() {
        var overlay = document.getElementById("overlay");
        var popup = document.getElementById("createDemandPopup");

        if (overlay && popup) {
            overlay.style.display = "block";
            popup.style.display = "block";

            overlay.addEventListener("click", function () {
                closeCreateDemandPopup();
            });
        }
    }
    function closeCreateDemandPopup() {
        var overlay = document.getElementById("overlay");
        var popup = document.getElementById("createDemandPopup");

        if (overlay && popup) {
            overlay.style.display = "none";
            popup.style.display = "none";
            overlay.removeEventListener("click", function () {
                closeCreateDemandPopup();
            });
        }
    }
    function changeStatus() {
        var demandId = @Model.DemandId;
        var demandStatusChangeViewModel = {
            DemandId: demandId,
            Status: 2
        };

        $.ajax({
            url: 'Demands/ChangeStatus',
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(demandStatusChangeViewModel),
            success: function (statusResult) {
                console.log(statusResult);
            },
            error: function (error) {
                console.error('Talep durumu değiştirme hatası:', error);
            }
        });
    }
</script>
@functions {
    string GetStatusClass(int status)
    {
        switch (status)
        {
            case 0: return "cancelled";
            case 1: return "pending";
            case 2: return "approved";
            default: return "";
        }
    }

    string GetStatusText(int status)
    {
        switch (status)
        {
            case 0: return "Cancelled";
            case 1: return "Pending";
            case 2: return "Approved";
            default: return "";
        }
    }
}