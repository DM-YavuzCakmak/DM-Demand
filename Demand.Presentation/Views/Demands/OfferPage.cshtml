@using Demand.Domain.ViewModels
@using System.Security.Claims
@using Newtonsoft.Json

@model List<OfferRequestViewModel>

@{
    var claimsIdentity = (ClaimsIdentity)User.Identity;
    var claims = claimsIdentity.Claims;
    var userId = long.Parse(claims.FirstOrDefault(x => x.Type == "UserId").Value);
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="~/css/index.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>
    <style>
        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        body {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            flex-direction: column;
        }

        main {
            margin-top: 20px;
            width: 95%;
            max-width: 1200px;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        #siteform {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 8px;
            border: 1px solid #dddddd;
            text-align: left;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .price-input, .totalprice-input {
            width: 100px;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-sizing: border-box;
        }

        input[type="text"] {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }

        #addButton, #removeButton {
            margin-top: 10px;
            background-color: #5cb85c;
            color: #fff;
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            #addButton:hover, #removeButton:hover {
                background-color: #45a049;
            }

        .input-sm {
            height: auto !important;
            padding: 5px;
        }

        select {
            width: 100%;
            padding: 5px;
            margin: 0 !important;
        }

        input {
            width: 100%;
            padding: 5px;
        }

    </style>
</head>
<body>
    <main class="table" id="demandTable">
        <h2 style="text-align: center; color: white;">TEKLİF GİRİŞİ</h2>
        <form id="siteform" enctype="multipart/form-data">
            <section class="tableBody">
                <table>
                    <thead>
                        <tr>
                            <th>KATEGORİ</th>
                            <th>ALT KATEGORİ</th>
                            <th>ÜRÜN ADI</th>
                            <th>MİKTAR</th>
                            <th>BİRİM</th>
                            <th>FİYAT</th>
                            <th>TOPLAM FİYAT</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var offerRequestViewModel in Model)
                        {
                            <tr>
                                <td>
                                    <select name="category[]" class="category" onchange="updateSubcategories(this.parentNode.parentNode.parentNode)">
                                        @if (Model[0].NebimCategoryModels != null)
                                        {
                                            <option>Lütfen seçiniz</option>
                                            foreach (var product in Model[0].NebimCategoryModels)
                                            {
                                                if (product.ProductHierarchyLevel01Code == offerRequestViewModel.ProductCategoryId.ToString())
                                                {
                                                    <option value="@product.ProductHierarchyLevel01Code" selected>@product.ProductHierarchyLevel01Description </option>
                                                }
                                                else
                                                {
                                                    <option value="@product.ProductHierarchyLevel01Code">@product.ProductHierarchyLevel01Description </option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td>
                                    <select name="subcategory[]" class="subcategory" onchange="updateProduct(this.parentNode.parentNode.parentNode)">
                                        @if (Model[0].NebimSubCategoryModels != null)
                                        {
                                            <option>Lütfen seçiniz</option>
                                            foreach (var product in Model[0].NebimSubCategoryModels)
                                            {
                                                if (product.ProductHierarchyLevel02Code == offerRequestViewModel.ProductSubCategoryId.ToString())
                                                {
                                                    <option value="@product.ProductHierarchyLevel02Code" selected>@product.ProductHierarchyLevel02Description </option>
                                                }
                                                else
                                                {
                                                    <option value="@product.ProductHierarchyLevel02Code">@product.ProductHierarchyLevel02Description </option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td>
                                    <select name="product[]" class="product" onchange="updateProductCode(this.parentNode.parentNode.parentNode)">
                                        @if (Model[0].NebimProductModels != null)
                                        {
                                            <option>Lütfen seçiniz</option>
                                            foreach (var product in Model[0].NebimProductModels)
                                            {
                                                if (product.ProductCode == offerRequestViewModel.ProductCode)
                                                {
                                                    <option value="@product.ProductCode" selected>@product.ProductDescription </option>
                                                }
                                                else
                                                {
                                                    <option value="@product.ProductCode">@product.ProductDescription </option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td>@offerRequestViewModel.ProductName</td>
                                <td>@offerRequestViewModel.Quantity</td>
                                <td>@offerRequestViewModel.Unit</td>
                                <td><input type="text" name="price" class="price-input" /></td>
                                <td><input type="text" name="totalPrice" class="totalprice-input" readonly /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </section>
        </form>
    </main>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
    <script src="script.js"></script>
</body>
</html>
<style>
    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    #sendButton {
        background-color: #4CAF50;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.price-input').forEach(function (priceInput) {
            priceInput.addEventListener('input', function () {
                var row = this.closest('tr');
                var quantity = parseFloat(row.cells[3].textContent) || 0;
                var price = parseFloat(this.value) || 0;
                var totalPrice = quantity * price;
                var totalPriceInput = row.querySelector('.totalprice-input');
                totalPriceInput.value = totalPrice.toFixed(2);
            });
        });
    });

    function updateSubcategories(parentNode) {
        debugger;
        var categoryValue = parentNode.querySelector('.category').value;
        var subcategorySelect = parentNode.querySelector('.subcategory');

        var subCategoryModels = @Html.Raw(Json.Serialize(Model[0].NebimSubCategoryModels));

        subcategorySelect.innerHTML = '';
        var defaultOption = document.createElement('option');
        defaultOption.text = "Lütfen seçiniz";
        subcategorySelect.add(defaultOption);
        subCategoryModels.forEach(function (subcategory) {
            if (subcategory.productHierarchyLevel01Code == categoryValue) {
                var option = document.createElement('option');
                option.value = subcategory.productHierarchyLevel02Code;
                option.textContent = subcategory.productHierarchyLevel02Description;
                subcategorySelect.appendChild(option);
            }
        });
    }
</script>